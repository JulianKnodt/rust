- // MIR for `flip_flop` before MatchBranchSimplification
+ // MIR for `flip_flop` after MatchBranchSimplification
  
  fn flip_flop(_1: std::result::Result<i32, u32>) -> std::result::Result<u32, i32> {
      debug a => _1;                       // in scope 0 at $DIR/match_identity.rs:16:18: 16:19
      let mut _0: std::result::Result<u32, i32>; // return place in scope 0 at $DIR/match_identity.rs:16:38: 16:50
      let mut _2: isize;                   // in scope 0 at $DIR/match_identity.rs:18:9: 18:14
      let _3: i32;                         // in scope 0 at $DIR/match_identity.rs:18:12: 18:13
      let mut _4: i32;                     // in scope 0 at $DIR/match_identity.rs:18:22: 18:23
      let _5: u32;                         // in scope 0 at $DIR/match_identity.rs:19:13: 19:14
      let mut _6: u32;                     // in scope 0 at $DIR/match_identity.rs:19:22: 19:23
      scope 1 {
          debug x => _3;                   // in scope 1 at $DIR/match_identity.rs:18:12: 18:13
      }
      scope 2 {
          debug y => _5;                   // in scope 2 at $DIR/match_identity.rs:19:13: 19:14
      }
  
      bb0: {
          _2 = discriminant(_1);           // scope 0 at $DIR/match_identity.rs:18:9: 18:14
          switchInt(move _2) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/match_identity.rs:18:9: 18:14
      }
  
      bb1: {
          StorageLive(_5);                 // scope 0 at $DIR/match_identity.rs:19:13: 19:14
          _5 = ((_1 as Err).0: u32);       // scope 0 at $DIR/match_identity.rs:19:13: 19:14
          StorageLive(_6);                 // scope 2 at $DIR/match_identity.rs:19:22: 19:23
          _6 = _5;                         // scope 2 at $DIR/match_identity.rs:19:22: 19:23
          ((_0 as Ok).0: u32) = move _6;   // scope 2 at $DIR/match_identity.rs:19:19: 19:24
          discriminant(_0) = 0;            // scope 2 at $DIR/match_identity.rs:19:19: 19:24
          StorageDead(_6);                 // scope 2 at $DIR/match_identity.rs:19:23: 19:24
          StorageDead(_5);                 // scope 0 at $DIR/match_identity.rs:19:23: 19:24
          goto -> bb3;                     // scope 0 at $DIR/match_identity.rs:17:5: 20:6
      }
  
      bb2: {
          StorageLive(_3);                 // scope 0 at $DIR/match_identity.rs:18:12: 18:13
          _3 = ((_1 as Ok).0: i32);        // scope 0 at $DIR/match_identity.rs:18:12: 18:13
          StorageLive(_4);                 // scope 1 at $DIR/match_identity.rs:18:22: 18:23
          _4 = _3;                         // scope 1 at $DIR/match_identity.rs:18:22: 18:23
          ((_0 as Err).0: i32) = move _4;  // scope 1 at $DIR/match_identity.rs:18:18: 18:24
          discriminant(_0) = 1;            // scope 1 at $DIR/match_identity.rs:18:18: 18:24
          StorageDead(_4);                 // scope 1 at $DIR/match_identity.rs:18:23: 18:24
          StorageDead(_3);                 // scope 0 at $DIR/match_identity.rs:18:23: 18:24
          goto -> bb3;                     // scope 0 at $DIR/match_identity.rs:17:5: 20:6
      }
  
      bb3: {
          return;                          // scope 0 at $DIR/match_identity.rs:21:2: 21:2
      }
  }
  
